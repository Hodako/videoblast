// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  first_name    String?
  last_name     String?
  email         String   @unique
  password_hash String
  created_at    DateTime @default(now())
  role          String   @default("user")
  playlists     Playlist[]
  comments      Comment[]
  videos        Video[]
}

model Video {
  id              Int             @id @default(autoincrement())
  title           String?
  description     String?
  duration        String?
  views           Int?
  uploaded        DateTime?
  thumbnail_url   String?
  video_url       String
  subtitle        String?
  uploader_id     Int?
  tags            String[]
  meta_data       Json?
  display_order   Int?
  type            String?
  uploader        User?           @relation(fields: [uploader_id], references: [id])
  playlists       PlaylistVideo[]
  comments        Comment[]
  categories      VideoCategory[]
}

model Short {
  id            Int     @id @default(autoincrement())
  title         String? @unique
  video_url     String
  thumbnail_url String?
  views         String?
}

model Image {
  id        Int    @id @default(autoincrement())
  title     String
  image_url String
}

model Playlist {
  id      Int             @id @default(autoincrement())
  name    String
  user_id Int
  user    User            @relation(fields: [user_id], references: [id])
  videos  PlaylistVideo[]
}

model PlaylistVideo {
  playlist_id Int
  video_id    Int
  playlist    Playlist @relation(fields: [playlist_id], references: [id], onDelete: Cascade)
  video       Video    @relation(fields: [video_id], references: [id], onDelete: Cascade)

  @@id([playlist_id, video_id])
}

model Comment {
  id         Int      @id @default(autoincrement())
  text       String
  user_id    Int
  video_id   Int
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id])
  video      Video    @relation(fields: [video_id], references: [id])
}

model SiteSetting {
  key   String @id
  value Json
}

model Category {
  id     Int             @id @default(autoincrement())
  name   String          @unique
  videos VideoCategory[]
}

model VideoCategory {
  video_id    Int
  category_id Int
  video       Video    @relation(fields: [video_id], references: [id], onDelete: Cascade)
  category    Category @relation(fields: [category_id], references: [id], onDelete: Cascade)

  @@id([video_id, category_id])
}

model Creator {
  id        Int     @id @default(autoincrement())
  name      String
  image_url String?
  description String?
}

    